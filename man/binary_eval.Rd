% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_eval.R
\name{binary_eval}
\alias{binary_eval}
\title{Calculate binary classification statistics}
\usage{
binary_eval(true, pred, names = TRUE)
}
\arguments{
\item{true}{The vector of true logical classifications.}

\item{pred}{The vector of predicted logical classifications.}

\item{names}{Logical for whether the return vector should have names or not.}
}
\value{
A named vector (unless \code{names = FALSE}) with five values in this order:
\itemize{
\item \code{precision}: \code{TP / ( TP + FP )}
\item \code{recall}: \code{TP / ( TP + FN )}
\item \code{TP}: the number of rows where both \code{true} and \code{pred} are \code{TRUE}
\item \code{FP}: the number of rows where \code{true} is \code{FALSE} and \code{pred} is \code{TRUE}
\item \code{FN}: the number of rows where \code{true} is \code{TRUE} and \code{pred} is \code{FALSE}
}
}
\description{
This function calculates precision, recall, and the underlying true positive (TP), false positive (FP), and false negative (FN) counts from two binary vectors.
This general function works well, but it is potentially inefficient for generating curves from large data with a monotonic threshold (such as a single p-value), so it is intended for more complex thresholding scenarios.
}
\examples{
# input classifications, true and prediction
true <- c(TRUE, TRUE, TRUE,  TRUE, FALSE, FALSE, FALSE)
pred <- c(TRUE, TRUE, TRUE, FALSE,  TRUE,  TRUE, FALSE)

# get stats!
data <- binary_eval( true, pred )
data

}
\seealso{
\code{\link[=filter_eval]{filter_eval()}} for a wrapper applied to 3-category classifications (remove, flip, keep).
}
