% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/af_test.R
\name{af_test}
\alias{af_test}
\title{Tests if allele frequencies match between datasets}
\usage{
af_test(x1, n1, x2, n2)
}
\arguments{
\item{x1}{The number of alleles of one type in the first dataset.}

\item{n1}{The total numbers of alleles in the first dataset.}

\item{x2}{The number of alleles of one type in the second dataset.}

\item{n2}{The total numbers of alleles in the second dataset.}
}
\value{
A list with these values:
\itemize{
\item \code{stat}: the test statistic
\item \code{df}: degrees of freedom used for chi squared test
\item \code{pval}: the p-value.
}
}
\description{
This function tests if allele frequencies at a single locus match between datasets based on their counts and sample sizes.
Under the null hypothesis, the frequency is the same in both datasets, while under the alternative they are different.
Counts are assumed to be Binomially distributed.
Significance is calculated using the likelihood ratio test.
If inputs are equal-length vectors, they are treated as independent data all assigned a single p-value calculated with degrees of freedom equal to the number of datapoints, which tests the joint null hypothesis (useful for combining data from different ancestries, or different loci).
}
\examples{
### Test single locus ###

# Simulate data where the alternative hypothesis is true
# true allele frequencies are different
p1 <- 0.2
p2 <- 0.3
# sample sizes can be very different
n1 <- 100
n2 <- 50
# simulate counts from Binomial distribution
x1 <- rbinom( 1, n1, p1 )
x2 <- rbinom( 1, n2, p2 )

# this performs desired statistical test
data <- af_test( x1, n1, x2, n2 )
# the p-value is most desired quantity.
# though null hypothesis is true, there is low power because sample sizes are small,
# so example is most likely insignificant
data$pval

### Multiple loci ###

# it's useful to think of each set of data as the same locus but a different ancestry,
# so the allele frequencies can be different.
# here the null hypothesis is true so both will share the same allele frequency.
# will simulate 3 ancestries
p <- c( 0.2, 0.7, 0.5 )
# all sample sizes can be different
n1 <- c( 100, 80, 200 )
n2 <- c( 50, 15, 99 )
# simulate counts from Binomial distribution (vectorized across all 3 ancestries)
x1 <- rbinom( 3, n1, p )
x2 <- rbinom( 3, n2, p )

# perform desired statistical test, a single p-value testing whether all of the three ancestries
# have the same allele frequency in both datasets (within each ancestry) or not, which is a
# 3-degree-of-freedom test.
data <- af_test( x1, n1, x2, n2 )
data$pval

}
