% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/af_test.R
\name{af_test}
\alias{af_test}
\title{Tests if allele frequencies match between datasets}
\usage{
af_test(x1, n1, x2, n2)
}
\arguments{
\item{x1}{The number of alleles of one type in the first dataset.}

\item{n1}{The total numbers of alleles (of all types) in the first dataset.}

\item{x2}{The number of alleles of one type in the second dataset.}

\item{n2}{The total numbers of alleles (of all types) in the second dataset.}
}
\value{
A list with these values:
\itemize{
\item \code{stat}: the test statistics (length equal to number of rows of inputs).
\item \code{df}: degrees of freedom used for chi squared test.
\item \code{pval}: the p-values (length equal to number of rows of inputs).
}
}
\description{
This function tests if allele frequencies at each locus match between two datasets based on their counts and sample sizes.
Under the null hypothesis, the frequency is the same in both datasets, while under the alternative they are different.
Counts are assumed to be Binomially distributed.
Significance is calculated using the likelihood ratio test.
If inputs are matrices of equal dimensions, rows are tested separately but columns are combined, assigned a single p-value calculated with degrees of freedom equal to the number of columns, which tests the joint null hypothesis (useful for combining data from different ancestries, or different loci).
Vector inputs are treated as column matrices.
}
\examples{
### Test single locus ###

# Simulate data where the alternative hypothesis is true
# true allele frequencies are different
p1 <- 0.2
p2 <- 0.3
# sample sizes can be very different
n1 <- 100
n2 <- 50
# simulate counts from Binomial distribution
x1 <- rbinom( 1, n1, p1 )
x2 <- rbinom( 1, n2, p2 )

# this performs desired statistical test
data <- af_test( x1, n1, x2, n2 )
# the p-value is most desired quantity.
# though null hypothesis is true, there is low power because sample sizes are small,
# so example is most likely insignificant
data$pval

### Multiple loci and ancestries ###

# it's useful to think of each column as the same locus but a different ancestry,
# so the allele frequencies can be different.
# Each row is a different locus to be tested separately.
# here the null hypothesis is true so both datasets will share the same allele frequency.
# will simulate 2 loci, 3 ancestries
p <- matrix(
    c(
        0.2, 0.7, 0.5,
        0.1, 0.3, 0.5
    ),
    nrow = 2,
    ncol = 3,
    byrow = TRUE
)
# all sample sizes can be different
n1 <- matrix( c( 100, 80, 200, 33, 66, 99 ), nrow = 2, byrow = TRUE )
n2 <- matrix( c( 50, 15, 99, 44, 55, 66 ), nrow = 2, byrow = TRUE )
# simulate counts from Binomial distribution (vectorized across all 3 ancestries,
# reshaped as matrix of desired dimensions)
x1 <- matrix( rbinom( 6, n1, p ), nrow = 2 )
x2 <- matrix( rbinom( 6, n2, p ), nrow = 2 )

# perform desired statistical test, a single p-value testing whether all of the three ancestries
# have the same allele frequency in both datasets (within each ancestry) or not, which is a
# 3-degree-of-freedom test.
data <- af_test( x1, n1, x2, n2 )
data$pval

}
\seealso{
\code{\link[=af_test_or]{af_test_or()}}, which unlike this function calculates odds ratios (OR), confidence intervals, and p-values under a more restricted alternative hypothesis that the OR is the same across columns.
}
